# Use NVIDIA PyTorch runtime - stable version that doesn't conflict
FROM nvcr.io/nvidia/pytorch:23.08-py3

# Set working directory
WORKDIR /app

# Install system dependencies only
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsndfile1 \
    portaudio19-dev \
    python3-pyaudio \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONPATH=/app
ENV TRANSFORMERS_CACHE=/app/model_cache
ENV HF_HOME=/app/model_cache
ENV CUDA_VISIBLE_DEVICES=0

# Create cache directory and set permissions
RUN mkdir -p /app/model_cache && chmod 777 /app/model_cache

# Create a volume for persistent model cache
VOLUME ["/app/model_cache"]

# Install only the packages we need, avoiding conflicts
RUN pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    websockets==12.0 \
    transformers==4.37.0 \
    librosa==0.10.1 \
    soundfile==0.12.1 \
    python-multipart==0.0.6 \
    aiofiles==23.2.1 \
    sentencepiece==0.1.99

# Copy application code
COPY backend/ ./backend/
COPY frontend/ ./frontend/

# Pre-download and cache the SeamlessM4T model
RUN python -c "import os; \
    try: \
        from transformers import SeamlessM4TModel, AutoProcessor; \
        print('Downloading SeamlessM4T model and processor...'); \
        model = SeamlessM4TModel.from_pretrained('facebook/seamless-m4t-large'); \
        processor = AutoProcessor.from_pretrained('facebook/seamless-m4t-large'); \
        print('Model download completed successfully'); \
    except Exception as e: \
        print(f'Model download failed: {e}'); \
        print('Model will be downloaded at runtime instead');"

# Expose port
EXPOSE 7860

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/health || exit 1

# Run the application
CMD ["python", "backend/main.py"]